services:
  imagor:
    image: mrsool-imagor:latest
    container_name: mrsool-imagor
    build: .
    environment:
      PORT: 8000
      IMAGOR_UNSAFE: 1
      # format configuration
      IMAGOR_AUTO_WEBP: 1
      IMAGOR_BASE_PARAMS: "filters:format(webp)"
      # Timeout Configuration - Increased for large PNG files
      IMAGOR_REQUEST_TIMEOUT: 120s
      IMAGOR_LOAD_TIMEOUT: 90s
      IMAGOR_SAVE_TIMEOUT: 60s
      IMAGOR_PROCESS_TIMEOUT: 90s
      # AWS Global Configuration
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: eu-west-1
      # S3 Loader Configuration
      S3_LOADER_BUCKET: mrsool-data-dev
      S3_LOADER_REGION: eu-west-3
      # Disable HTTP Loader to use only S3 loader
      HTTP_LOADER_DISABLE: 1
      # S3 Storage Configuration (for processed images)
      S3_STORAGE_BUCKET: mrsool-nprod-cdn-cache-bucket
      S3_STORAGE_BASE_DIR: storage
      # S3 Result Storage Configuration
      S3_RESULT_STORAGE_BUCKET: mrsool-nprod-cdn-cache-bucket
      S3_RESULT_STORAGE_BASE_DIR: results
      S3_SAFE_CHARS: "--"
      # Prometheus Metrics Configuration
      PROMETHEUS_BIND: ":5000"
      PROMETHEUS_PATH: "/metrics"
      # Sentry Configuration
      # SENTRY_DSN: ${SENTRY_DSN}
      # Server Configuration
      SERVER_ACCESS_LOG: 1
      VIPS_CONCURRENCY: 4
      SERVER_CORS: 1
      DEBUG: 1
      
    ports:
      - "8001:8000"
      - "5000:5000"  # Prometheus metrics port

  nginx:
    image: nginx:alpine
    container_name: mrsool-imagor-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - imagor
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  nginx_cache: